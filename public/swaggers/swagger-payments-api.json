{
  "openapi": "3.0.1",
  "info": {
    "title": "RIBPay - API",
    "version": "1.0",
    "description": "# Presentation - RIBPay API: Revolutionizing Digital Payments\n\n\n\n\n## Introduction\n\n\n\nWelcome to the future of digital transactions with RIBPay API, where convenience, security, and efficiency converge to transform how we manage payments.\n\n\n\n\n\n\n\n\n"
  },
  "servers": [
    {
      "url": "http://apim-ribpaydev-resource.azure-api.net/dab-test"
    }
  ],
  "paths": {
    "/Partner/pk_partner/{pk_partner}": {
      "get": {
        "tags": ["Partner"],
        "summary": "/Partner/pk_partner/{pk_partner} - GET",
        "description": "Returns an entity.",
        "operationId": "get-partner-pk_partner-pk_partner",
        "parameters": [
          {
            "name": "pk_partner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Partner"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_partner": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["Partner"],
        "summary": "/Partner/pk_partner/{pk_partner} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-partner-pk_partner-pk_partner",
        "parameters": [
          {
            "name": "pk_partner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_NoPK"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Partner"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_partner": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Partner"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_partner": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["Partner"],
        "summary": "/Partner/pk_partner/{pk_partner} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-partner-pk_partner-pk_partner",
        "parameters": [
          {
            "name": "pk_partner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_NoPK"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Partner"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_partner": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Partner"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_partner": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["Partner"],
        "summary": "/Partner/pk_partner/{pk_partner} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-partner-pk_partner-pk_partner",
        "parameters": [
          {
            "name": "pk_partner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/Partner": {
      "get": {
        "tags": ["Partner"],
        "summary": "/Partner - GET",
        "description": "Returns entities.",
        "operationId": "get-partner",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Partner"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_partner": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["Partner"],
        "summary": "/Partner - POST",
        "description": "Create entity.",
        "operationId": "post-partner",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner"
              },
              "example": {
                "pk_partner": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Partner"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_partner": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/User/pk_user/{pk_user}": {
      "get": {
        "tags": ["User"],
        "summary": "/User/pk_user/{pk_user} - GET",
        "description": "Returns an entity.",
        "operationId": "get-user-pk_user-pk_user",
        "parameters": [
          {
            "name": "pk_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "user_oid": "string",
                      "user_first_name": "string",
                      "user_last_name": "string",
                      "user_phone": "string",
                      "user_email": "string",
                      "user_role": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "/User/pk_user/{pk_user} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-user-pk_user-pk_user",
        "parameters": [
          {
            "name": "pk_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_NoPK"
              },
              "example": {
                "user_oid": "string",
                "user_first_name": "string",
                "user_last_name": "string",
                "user_phone": "string",
                "user_email": "string",
                "user_role": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "user_oid": "string",
                      "user_first_name": "string",
                      "user_last_name": "string",
                      "user_phone": "string",
                      "user_email": "string",
                      "user_role": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "user_oid": "string",
                      "user_first_name": "string",
                      "user_last_name": "string",
                      "user_phone": "string",
                      "user_email": "string",
                      "user_role": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "/User/pk_user/{pk_user} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-user-pk_user-pk_user",
        "parameters": [
          {
            "name": "pk_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_NoPK"
              },
              "example": {
                "user_oid": "string",
                "user_first_name": "string",
                "user_last_name": "string",
                "user_phone": "string",
                "user_email": "string",
                "user_role": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "user_oid": "string",
                      "user_first_name": "string",
                      "user_last_name": "string",
                      "user_phone": "string",
                      "user_email": "string",
                      "user_role": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "user_oid": "string",
                      "user_first_name": "string",
                      "user_last_name": "string",
                      "user_phone": "string",
                      "user_email": "string",
                      "user_role": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "/User/pk_user/{pk_user} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-user-pk_user-pk_user",
        "parameters": [
          {
            "name": "pk_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/User": {
      "get": {
        "tags": ["User"],
        "summary": "/User - GET",
        "description": "Returns entities.",
        "operationId": "get-user",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "user_oid": "string",
                      "user_first_name": "string",
                      "user_last_name": "string",
                      "user_phone": "string",
                      "user_email": "string",
                      "user_role": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "/User - POST",
        "description": "Create entity.",
        "operationId": "post-user",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "pk_user": "string",
                "user_oid": "string",
                "user_first_name": "string",
                "user_last_name": "string",
                "user_phone": "string",
                "user_email": "string",
                "user_role": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "user_oid": "string",
                      "user_first_name": "string",
                      "user_last_name": "string",
                      "user_phone": "string",
                      "user_email": "string",
                      "user_role": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/Account/pk_account/{pk_account}": {
      "get": {
        "tags": ["Account"],
        "summary": "/Account/pk_account/{pk_account} - GET",
        "description": "Returns an entity.",
        "operationId": "get-account-pk_account-pk_account",
        "parameters": [
          {
            "name": "pk_account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_account": "string",
                      "account_global_id": "string",
                      "account_national_id": "string",
                      "account_name": "string",
                      "account_type": "string",
                      "account_is_active": true,
                      "account_deletion_date": "string",
                      "account_created_at": "string",
                      "account_currency": "string",
                      "account_notification_email": "string",
                      "account_iban_billing": "string",
                      "fk_partner": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["Account"],
        "summary": "/Account/pk_account/{pk_account} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-account-pk_account-pk_account",
        "parameters": [
          {
            "name": "pk_account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account_NoPK"
              },
              "example": {
                "account_global_id": "string",
                "account_national_id": "string",
                "account_name": "string",
                "account_type": "string",
                "account_is_active": true,
                "account_deletion_date": "string",
                "account_created_at": "string",
                "account_currency": "string",
                "account_notification_email": "string",
                "account_iban_billing": "string",
                "fk_partner": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_account": "string",
                      "account_global_id": "string",
                      "account_national_id": "string",
                      "account_name": "string",
                      "account_type": "string",
                      "account_is_active": true,
                      "account_deletion_date": "string",
                      "account_created_at": "string",
                      "account_currency": "string",
                      "account_notification_email": "string",
                      "account_iban_billing": "string",
                      "fk_partner": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_account": "string",
                      "account_global_id": "string",
                      "account_national_id": "string",
                      "account_name": "string",
                      "account_type": "string",
                      "account_is_active": true,
                      "account_deletion_date": "string",
                      "account_created_at": "string",
                      "account_currency": "string",
                      "account_notification_email": "string",
                      "account_iban_billing": "string",
                      "fk_partner": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["Account"],
        "summary": "/Account/pk_account/{pk_account} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-account-pk_account-pk_account",
        "parameters": [
          {
            "name": "pk_account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account_NoPK"
              },
              "example": {
                "account_global_id": "string",
                "account_national_id": "string",
                "account_name": "string",
                "account_type": "string",
                "account_is_active": true,
                "account_deletion_date": "string",
                "account_created_at": "string",
                "account_currency": "string",
                "account_notification_email": "string",
                "account_iban_billing": "string",
                "fk_partner": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_account": "string",
                      "account_global_id": "string",
                      "account_national_id": "string",
                      "account_name": "string",
                      "account_type": "string",
                      "account_is_active": true,
                      "account_deletion_date": "string",
                      "account_created_at": "string",
                      "account_currency": "string",
                      "account_notification_email": "string",
                      "account_iban_billing": "string",
                      "fk_partner": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_account": "string",
                      "account_global_id": "string",
                      "account_national_id": "string",
                      "account_name": "string",
                      "account_type": "string",
                      "account_is_active": true,
                      "account_deletion_date": "string",
                      "account_created_at": "string",
                      "account_currency": "string",
                      "account_notification_email": "string",
                      "account_iban_billing": "string",
                      "fk_partner": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["Account"],
        "summary": "/Account/pk_account/{pk_account} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-account-pk_account-pk_account",
        "parameters": [
          {
            "name": "pk_account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/Account": {
      "get": {
        "tags": ["Account"],
        "summary": "/Account - GET",
        "description": "Returns entities.",
        "operationId": "get-account",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_account": "string",
                      "account_global_id": "string",
                      "account_national_id": "string",
                      "account_name": "string",
                      "account_type": "string",
                      "account_is_active": true,
                      "account_deletion_date": "string",
                      "account_created_at": "string",
                      "account_currency": "string",
                      "account_notification_email": "string",
                      "account_iban_billing": "string",
                      "fk_partner": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["Account"],
        "summary": "/Account - POST",
        "description": "Create entity.",
        "operationId": "post-account",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              },
              "example": {
                "pk_account": "string",
                "account_global_id": "string",
                "account_national_id": "string",
                "account_name": "string",
                "account_type": "string",
                "account_is_active": true,
                "account_deletion_date": "string",
                "account_created_at": "string",
                "account_currency": "string",
                "account_notification_email": "string",
                "account_iban_billing": "string",
                "fk_partner": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_account": "string",
                      "account_global_id": "string",
                      "account_national_id": "string",
                      "account_name": "string",
                      "account_type": "string",
                      "account_is_active": true,
                      "account_deletion_date": "string",
                      "account_created_at": "string",
                      "account_currency": "string",
                      "account_notification_email": "string",
                      "account_iban_billing": "string",
                      "fk_partner": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/UserHasAccount/pk_user/{pk_user}/pk_account/{pk_account}": {
      "get": {
        "tags": ["UserHasAccount"],
        "summary": "/UserHasAccount/pk_user/{pk_user}/pk_account/{pk_account} - GET",
        "description": "Returns an entity.",
        "operationId": "get-userhasaccount-pk_user-pk_user-pk_account-pk_account",
        "parameters": [
          {
            "name": "pk_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk_account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserHasAccount"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "pk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["UserHasAccount"],
        "summary": "/UserHasAccount/pk_user/{pk_user}/pk_account/{pk_account} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-userhasaccount-pk_user-pk_user-pk_account-pk_account",
        "parameters": [
          {
            "name": "pk_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk_account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserHasAccount_NoPK"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserHasAccount"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "pk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserHasAccount"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "pk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["UserHasAccount"],
        "summary": "/UserHasAccount/pk_user/{pk_user}/pk_account/{pk_account} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-userhasaccount-pk_user-pk_user-pk_account-pk_account",
        "parameters": [
          {
            "name": "pk_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk_account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserHasAccount_NoPK"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserHasAccount"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "pk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserHasAccount"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "pk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["UserHasAccount"],
        "summary": "/UserHasAccount/pk_user/{pk_user}/pk_account/{pk_account} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-userhasaccount-pk_user-pk_user-pk_account-pk_account",
        "parameters": [
          {
            "name": "pk_user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pk_account",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/UserHasAccount": {
      "get": {
        "tags": ["UserHasAccount"],
        "summary": "/UserHasAccount - GET",
        "description": "Returns entities.",
        "operationId": "get-userhasaccount",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserHasAccount"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "pk_account": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["UserHasAccount"],
        "summary": "/UserHasAccount - POST",
        "description": "Create entity.",
        "operationId": "post-userhasaccount",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserHasAccount"
              },
              "example": {
                "pk_user": "string",
                "pk_account": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserHasAccount"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_user": "string",
                      "pk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/Invoice/pk_invoice/{pk_invoice}": {
      "get": {
        "tags": ["Invoice"],
        "summary": "/Invoice/pk_invoice/{pk_invoice} - GET",
        "description": "Returns an entity.",
        "operationId": "get-invoice-pk_invoice-pk_invoice",
        "parameters": [
          {
            "name": "pk_invoice",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_invoice": "string",
                      "invoice_number": "string",
                      "invoice_month": "string",
                      "invoice_created_at": "string",
                      "invoice_status": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["Invoice"],
        "summary": "/Invoice/pk_invoice/{pk_invoice} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-invoice-pk_invoice-pk_invoice",
        "parameters": [
          {
            "name": "pk_invoice",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice_NoPK"
              },
              "example": {
                "invoice_number": "string",
                "invoice_month": "string",
                "invoice_created_at": "string",
                "invoice_status": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_invoice": "string",
                      "invoice_number": "string",
                      "invoice_month": "string",
                      "invoice_created_at": "string",
                      "invoice_status": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_invoice": "string",
                      "invoice_number": "string",
                      "invoice_month": "string",
                      "invoice_created_at": "string",
                      "invoice_status": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["Invoice"],
        "summary": "/Invoice/pk_invoice/{pk_invoice} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-invoice-pk_invoice-pk_invoice",
        "parameters": [
          {
            "name": "pk_invoice",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice_NoPK"
              },
              "example": {
                "invoice_number": "string",
                "invoice_month": "string",
                "invoice_created_at": "string",
                "invoice_status": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_invoice": "string",
                      "invoice_number": "string",
                      "invoice_month": "string",
                      "invoice_created_at": "string",
                      "invoice_status": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_invoice": "string",
                      "invoice_number": "string",
                      "invoice_month": "string",
                      "invoice_created_at": "string",
                      "invoice_status": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["Invoice"],
        "summary": "/Invoice/pk_invoice/{pk_invoice} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-invoice-pk_invoice-pk_invoice",
        "parameters": [
          {
            "name": "pk_invoice",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/Invoice": {
      "get": {
        "tags": ["Invoice"],
        "summary": "/Invoice - GET",
        "description": "Returns entities.",
        "operationId": "get-invoice",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_invoice": "string",
                      "invoice_number": "string",
                      "invoice_month": "string",
                      "invoice_created_at": "string",
                      "invoice_status": "string",
                      "fk_account": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["Invoice"],
        "summary": "/Invoice - POST",
        "description": "Create entity.",
        "operationId": "post-invoice",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              },
              "example": {
                "pk_invoice": "string",
                "invoice_number": "string",
                "invoice_month": "string",
                "invoice_created_at": "string",
                "invoice_status": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_invoice": "string",
                      "invoice_number": "string",
                      "invoice_month": "string",
                      "invoice_created_at": "string",
                      "invoice_status": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/BillingAddress/pk_billing_address/{pk_billing_address}": {
      "get": {
        "tags": ["BillingAddress"],
        "summary": "/BillingAddress/pk_billing_address/{pk_billing_address} - GET",
        "description": "Returns an entity.",
        "operationId": "get-billingaddress-pk_billing_address-pk_billing_address",
        "parameters": [
          {
            "name": "pk_billing_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BillingAddress"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_billing_address": "string",
                      "billing_address": "string",
                      "billing_address_complement_localisation": "string",
                      "billing_address_numero_voie": "string",
                      "billing_address_indice_repetition": "string",
                      "billing_address_type_voie": "string",
                      "billing_address_libelle_voie": "string",
                      "billing_address_distribution_speciale": "string",
                      "billing_address_code_postal": "string",
                      "billing_address_libelle_commune": "string",
                      "billing_address_code_pays": "string",
                      "billing_address_pays": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["BillingAddress"],
        "summary": "/BillingAddress/pk_billing_address/{pk_billing_address} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-billingaddress-pk_billing_address-pk_billing_address",
        "parameters": [
          {
            "name": "pk_billing_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingAddress_NoPK"
              },
              "example": {
                "billing_address": "string",
                "billing_address_complement_localisation": "string",
                "billing_address_numero_voie": "string",
                "billing_address_indice_repetition": "string",
                "billing_address_type_voie": "string",
                "billing_address_libelle_voie": "string",
                "billing_address_distribution_speciale": "string",
                "billing_address_code_postal": "string",
                "billing_address_libelle_commune": "string",
                "billing_address_code_pays": "string",
                "billing_address_pays": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BillingAddress"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_billing_address": "string",
                      "billing_address": "string",
                      "billing_address_complement_localisation": "string",
                      "billing_address_numero_voie": "string",
                      "billing_address_indice_repetition": "string",
                      "billing_address_type_voie": "string",
                      "billing_address_libelle_voie": "string",
                      "billing_address_distribution_speciale": "string",
                      "billing_address_code_postal": "string",
                      "billing_address_libelle_commune": "string",
                      "billing_address_code_pays": "string",
                      "billing_address_pays": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BillingAddress"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_billing_address": "string",
                      "billing_address": "string",
                      "billing_address_complement_localisation": "string",
                      "billing_address_numero_voie": "string",
                      "billing_address_indice_repetition": "string",
                      "billing_address_type_voie": "string",
                      "billing_address_libelle_voie": "string",
                      "billing_address_distribution_speciale": "string",
                      "billing_address_code_postal": "string",
                      "billing_address_libelle_commune": "string",
                      "billing_address_code_pays": "string",
                      "billing_address_pays": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["BillingAddress"],
        "summary": "/BillingAddress/pk_billing_address/{pk_billing_address} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-billingaddress-pk_billing_address-pk_billing_address",
        "parameters": [
          {
            "name": "pk_billing_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingAddress_NoPK"
              },
              "example": {
                "billing_address": "string",
                "billing_address_complement_localisation": "string",
                "billing_address_numero_voie": "string",
                "billing_address_indice_repetition": "string",
                "billing_address_type_voie": "string",
                "billing_address_libelle_voie": "string",
                "billing_address_distribution_speciale": "string",
                "billing_address_code_postal": "string",
                "billing_address_libelle_commune": "string",
                "billing_address_code_pays": "string",
                "billing_address_pays": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BillingAddress"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_billing_address": "string",
                      "billing_address": "string",
                      "billing_address_complement_localisation": "string",
                      "billing_address_numero_voie": "string",
                      "billing_address_indice_repetition": "string",
                      "billing_address_type_voie": "string",
                      "billing_address_libelle_voie": "string",
                      "billing_address_distribution_speciale": "string",
                      "billing_address_code_postal": "string",
                      "billing_address_libelle_commune": "string",
                      "billing_address_code_pays": "string",
                      "billing_address_pays": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BillingAddress"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_billing_address": "string",
                      "billing_address": "string",
                      "billing_address_complement_localisation": "string",
                      "billing_address_numero_voie": "string",
                      "billing_address_indice_repetition": "string",
                      "billing_address_type_voie": "string",
                      "billing_address_libelle_voie": "string",
                      "billing_address_distribution_speciale": "string",
                      "billing_address_code_postal": "string",
                      "billing_address_libelle_commune": "string",
                      "billing_address_code_pays": "string",
                      "billing_address_pays": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["BillingAddress"],
        "summary": "/BillingAddress/pk_billing_address/{pk_billing_address} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-billingaddress-pk_billing_address-pk_billing_address",
        "parameters": [
          {
            "name": "pk_billing_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/BillingAddress": {
      "get": {
        "tags": ["BillingAddress"],
        "summary": "/BillingAddress - GET",
        "description": "Returns entities.",
        "operationId": "get-billingaddress",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BillingAddress"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_billing_address": "string",
                      "billing_address": "string",
                      "billing_address_complement_localisation": "string",
                      "billing_address_numero_voie": "string",
                      "billing_address_indice_repetition": "string",
                      "billing_address_type_voie": "string",
                      "billing_address_libelle_voie": "string",
                      "billing_address_distribution_speciale": "string",
                      "billing_address_code_postal": "string",
                      "billing_address_libelle_commune": "string",
                      "billing_address_code_pays": "string",
                      "billing_address_pays": "string",
                      "fk_account": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["BillingAddress"],
        "summary": "/BillingAddress - POST",
        "description": "Create entity.",
        "operationId": "post-billingaddress",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingAddress"
              },
              "example": {
                "pk_billing_address": "string",
                "billing_address": "string",
                "billing_address_complement_localisation": "string",
                "billing_address_numero_voie": "string",
                "billing_address_indice_repetition": "string",
                "billing_address_type_voie": "string",
                "billing_address_libelle_voie": "string",
                "billing_address_distribution_speciale": "string",
                "billing_address_code_postal": "string",
                "billing_address_libelle_commune": "string",
                "billing_address_code_pays": "string",
                "billing_address_pays": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BillingAddress"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_billing_address": "string",
                      "billing_address": "string",
                      "billing_address_complement_localisation": "string",
                      "billing_address_numero_voie": "string",
                      "billing_address_indice_repetition": "string",
                      "billing_address_type_voie": "string",
                      "billing_address_libelle_voie": "string",
                      "billing_address_distribution_speciale": "string",
                      "billing_address_code_postal": "string",
                      "billing_address_libelle_commune": "string",
                      "billing_address_code_pays": "string",
                      "billing_address_pays": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/Terminal/pk_terminal/{pk_terminal}": {
      "get": {
        "tags": ["Terminal"],
        "summary": "/Terminal/pk_terminal/{pk_terminal} - GET",
        "description": "Returns an entity.",
        "operationId": "get-terminal-pk_terminal-pk_terminal",
        "parameters": [
          {
            "name": "pk_terminal",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Terminal"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_terminal": "string",
                      "terminal_label": "string",
                      "terminal_favorite_contract_type": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["Terminal"],
        "summary": "/Terminal/pk_terminal/{pk_terminal} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-terminal-pk_terminal-pk_terminal",
        "parameters": [
          {
            "name": "pk_terminal",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Terminal_NoPK"
              },
              "example": {
                "terminal_label": "string",
                "terminal_favorite_contract_type": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Terminal"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_terminal": "string",
                      "terminal_label": "string",
                      "terminal_favorite_contract_type": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Terminal"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_terminal": "string",
                      "terminal_label": "string",
                      "terminal_favorite_contract_type": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["Terminal"],
        "summary": "/Terminal/pk_terminal/{pk_terminal} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-terminal-pk_terminal-pk_terminal",
        "parameters": [
          {
            "name": "pk_terminal",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Terminal_NoPK"
              },
              "example": {
                "terminal_label": "string",
                "terminal_favorite_contract_type": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Terminal"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_terminal": "string",
                      "terminal_label": "string",
                      "terminal_favorite_contract_type": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Terminal"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_terminal": "string",
                      "terminal_label": "string",
                      "terminal_favorite_contract_type": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["Terminal"],
        "summary": "/Terminal/pk_terminal/{pk_terminal} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-terminal-pk_terminal-pk_terminal",
        "parameters": [
          {
            "name": "pk_terminal",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/Terminal": {
      "get": {
        "tags": ["Terminal"],
        "summary": "/Terminal - GET",
        "description": "Returns entities.",
        "operationId": "get-terminal",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Terminal"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_terminal": "string",
                      "terminal_label": "string",
                      "terminal_favorite_contract_type": "string",
                      "fk_account": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["Terminal"],
        "summary": "/Terminal - POST",
        "description": "Create entity.",
        "operationId": "post-terminal",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Terminal"
              },
              "example": {
                "pk_terminal": "string",
                "terminal_label": "string",
                "terminal_favorite_contract_type": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Terminal"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_terminal": "string",
                      "terminal_label": "string",
                      "terminal_favorite_contract_type": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/Mandate/pk_mandate/{pk_mandate}": {
      "get": {
        "tags": ["Mandate"],
        "summary": "/Mandate/pk_mandate/{pk_mandate} - GET",
        "description": "Returns an entity.",
        "operationId": "get-mandate-pk_mandate-pk_mandate",
        "parameters": [
          {
            "name": "pk_mandate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Mandate"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_mandate": "string",
                      "mandate_reference": "string",
                      "mandate_signature_date": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["Mandate"],
        "summary": "/Mandate/pk_mandate/{pk_mandate} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-mandate-pk_mandate-pk_mandate",
        "parameters": [
          {
            "name": "pk_mandate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Mandate_NoPK"
              },
              "example": {
                "mandate_reference": "string",
                "mandate_signature_date": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Mandate"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_mandate": "string",
                      "mandate_reference": "string",
                      "mandate_signature_date": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Mandate"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_mandate": "string",
                      "mandate_reference": "string",
                      "mandate_signature_date": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["Mandate"],
        "summary": "/Mandate/pk_mandate/{pk_mandate} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-mandate-pk_mandate-pk_mandate",
        "parameters": [
          {
            "name": "pk_mandate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Mandate_NoPK"
              },
              "example": {
                "mandate_reference": "string",
                "mandate_signature_date": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Mandate"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_mandate": "string",
                      "mandate_reference": "string",
                      "mandate_signature_date": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Mandate"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_mandate": "string",
                      "mandate_reference": "string",
                      "mandate_signature_date": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["Mandate"],
        "summary": "/Mandate/pk_mandate/{pk_mandate} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-mandate-pk_mandate-pk_mandate",
        "parameters": [
          {
            "name": "pk_mandate",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/Mandate": {
      "get": {
        "tags": ["Mandate"],
        "summary": "/Mandate - GET",
        "description": "Returns entities.",
        "operationId": "get-mandate",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Mandate"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_mandate": "string",
                      "mandate_reference": "string",
                      "mandate_signature_date": "string",
                      "fk_account": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["Mandate"],
        "summary": "/Mandate - POST",
        "description": "Create entity.",
        "operationId": "post-mandate",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Mandate"
              },
              "example": {
                "pk_mandate": "string",
                "mandate_reference": "string",
                "mandate_signature_date": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Mandate"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_mandate": "string",
                      "mandate_reference": "string",
                      "mandate_signature_date": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/Contract/pk_contract/{pk_contract}": {
      "get": {
        "tags": ["Contract"],
        "summary": "/Contract/pk_contract/{pk_contract} - GET",
        "description": "Returns an entity.",
        "operationId": "get-contract-pk_contract-pk_contract",
        "parameters": [
          {
            "name": "pk_contract",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contract"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_contract": "string",
                      "contract_type": "string",
                      "contract_number": "string",
                      "contract_subscription_id": "string",
                      "contract_beneficiary_name": "string",
                      "fk_terminal": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["Contract"],
        "summary": "/Contract/pk_contract/{pk_contract} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-contract-pk_contract-pk_contract",
        "parameters": [
          {
            "name": "pk_contract",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contract_NoPK"
              },
              "example": {
                "contract_type": "string",
                "contract_number": "string",
                "contract_subscription_id": "string",
                "contract_beneficiary_name": "string",
                "fk_terminal": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contract"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_contract": "string",
                      "contract_type": "string",
                      "contract_number": "string",
                      "contract_subscription_id": "string",
                      "contract_beneficiary_name": "string",
                      "fk_terminal": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contract"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_contract": "string",
                      "contract_type": "string",
                      "contract_number": "string",
                      "contract_subscription_id": "string",
                      "contract_beneficiary_name": "string",
                      "fk_terminal": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["Contract"],
        "summary": "/Contract/pk_contract/{pk_contract} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-contract-pk_contract-pk_contract",
        "parameters": [
          {
            "name": "pk_contract",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contract_NoPK"
              },
              "example": {
                "contract_type": "string",
                "contract_number": "string",
                "contract_subscription_id": "string",
                "contract_beneficiary_name": "string",
                "fk_terminal": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contract"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_contract": "string",
                      "contract_type": "string",
                      "contract_number": "string",
                      "contract_subscription_id": "string",
                      "contract_beneficiary_name": "string",
                      "fk_terminal": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contract"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_contract": "string",
                      "contract_type": "string",
                      "contract_number": "string",
                      "contract_subscription_id": "string",
                      "contract_beneficiary_name": "string",
                      "fk_terminal": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["Contract"],
        "summary": "/Contract/pk_contract/{pk_contract} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-contract-pk_contract-pk_contract",
        "parameters": [
          {
            "name": "pk_contract",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/Contract": {
      "get": {
        "tags": ["Contract"],
        "summary": "/Contract - GET",
        "description": "Returns entities.",
        "operationId": "get-contract",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contract"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_contract": "string",
                      "contract_type": "string",
                      "contract_number": "string",
                      "contract_subscription_id": "string",
                      "contract_beneficiary_name": "string",
                      "fk_terminal": "string",
                      "fk_account": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["Contract"],
        "summary": "/Contract - POST",
        "description": "Create entity.",
        "operationId": "post-contract",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contract"
              },
              "example": {
                "pk_contract": "string",
                "contract_type": "string",
                "contract_number": "string",
                "contract_subscription_id": "string",
                "contract_beneficiary_name": "string",
                "fk_terminal": "string",
                "fk_account": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contract"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_contract": "string",
                      "contract_type": "string",
                      "contract_number": "string",
                      "contract_subscription_id": "string",
                      "contract_beneficiary_name": "string",
                      "fk_terminal": "string",
                      "fk_account": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/TypeRibpay/pk_type_ribpay/{pk_type_ribpay}": {
      "get": {
        "tags": ["TypeRibpay"],
        "summary": "/TypeRibpay/pk_type_ribpay/{pk_type_ribpay} - GET",
        "description": "Returns an entity.",
        "operationId": "get-typeribpay-pk_type_ribpay-pk_type_ribpay",
        "parameters": [
          {
            "name": "pk_type_ribpay",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeRibpay"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_ribpay": "string",
                      "type_ribpay_authorized_account_id": "string",
                      "type_ribpay_alias_id": "string",
                      "fk_contract": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["TypeRibpay"],
        "summary": "/TypeRibpay/pk_type_ribpay/{pk_type_ribpay} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-typeribpay-pk_type_ribpay-pk_type_ribpay",
        "parameters": [
          {
            "name": "pk_type_ribpay",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeRibpay_NoPK"
              },
              "example": {
                "type_ribpay_authorized_account_id": "string",
                "type_ribpay_alias_id": "string",
                "fk_contract": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeRibpay"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_ribpay": "string",
                      "type_ribpay_authorized_account_id": "string",
                      "type_ribpay_alias_id": "string",
                      "fk_contract": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeRibpay"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_ribpay": "string",
                      "type_ribpay_authorized_account_id": "string",
                      "type_ribpay_alias_id": "string",
                      "fk_contract": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["TypeRibpay"],
        "summary": "/TypeRibpay/pk_type_ribpay/{pk_type_ribpay} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-typeribpay-pk_type_ribpay-pk_type_ribpay",
        "parameters": [
          {
            "name": "pk_type_ribpay",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeRibpay_NoPK"
              },
              "example": {
                "type_ribpay_authorized_account_id": "string",
                "type_ribpay_alias_id": "string",
                "fk_contract": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeRibpay"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_ribpay": "string",
                      "type_ribpay_authorized_account_id": "string",
                      "type_ribpay_alias_id": "string",
                      "fk_contract": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeRibpay"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_ribpay": "string",
                      "type_ribpay_authorized_account_id": "string",
                      "type_ribpay_alias_id": "string",
                      "fk_contract": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["TypeRibpay"],
        "summary": "/TypeRibpay/pk_type_ribpay/{pk_type_ribpay} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-typeribpay-pk_type_ribpay-pk_type_ribpay",
        "parameters": [
          {
            "name": "pk_type_ribpay",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/TypeRibpay": {
      "get": {
        "tags": ["TypeRibpay"],
        "summary": "/TypeRibpay - GET",
        "description": "Returns entities.",
        "operationId": "get-typeribpay",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeRibpay"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_ribpay": "string",
                      "type_ribpay_authorized_account_id": "string",
                      "type_ribpay_alias_id": "string",
                      "fk_contract": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["TypeRibpay"],
        "summary": "/TypeRibpay - POST",
        "description": "Create entity.",
        "operationId": "post-typeribpay",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeRibpay"
              },
              "example": {
                "pk_type_ribpay": "string",
                "type_ribpay_authorized_account_id": "string",
                "type_ribpay_alias_id": "string",
                "fk_contract": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeRibpay"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_ribpay": "string",
                      "type_ribpay_authorized_account_id": "string",
                      "type_ribpay_alias_id": "string",
                      "fk_contract": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/TypeVads/pk_type_vads/{pk_type_vads}": {
      "get": {
        "tags": ["TypeVads"],
        "summary": "/TypeVads/pk_type_vads/{pk_type_vads} - GET",
        "description": "Returns an entity.",
        "operationId": "get-typevads-pk_type_vads-pk_type_vads",
        "parameters": [
          {
            "name": "pk_type_vads",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeVads"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_vads": "string",
                      "type_vads_merchant_id": "string",
                      "fk_contract": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["TypeVads"],
        "summary": "/TypeVads/pk_type_vads/{pk_type_vads} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-typevads-pk_type_vads-pk_type_vads",
        "parameters": [
          {
            "name": "pk_type_vads",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeVads_NoPK"
              },
              "example": {
                "type_vads_merchant_id": "string",
                "fk_contract": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeVads"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_vads": "string",
                      "type_vads_merchant_id": "string",
                      "fk_contract": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeVads"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_vads": "string",
                      "type_vads_merchant_id": "string",
                      "fk_contract": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["TypeVads"],
        "summary": "/TypeVads/pk_type_vads/{pk_type_vads} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-typevads-pk_type_vads-pk_type_vads",
        "parameters": [
          {
            "name": "pk_type_vads",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeVads_NoPK"
              },
              "example": {
                "type_vads_merchant_id": "string",
                "fk_contract": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeVads"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_vads": "string",
                      "type_vads_merchant_id": "string",
                      "fk_contract": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeVads"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_vads": "string",
                      "type_vads_merchant_id": "string",
                      "fk_contract": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["TypeVads"],
        "summary": "/TypeVads/pk_type_vads/{pk_type_vads} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-typevads-pk_type_vads-pk_type_vads",
        "parameters": [
          {
            "name": "pk_type_vads",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/TypeVads": {
      "get": {
        "tags": ["TypeVads"],
        "summary": "/TypeVads - GET",
        "description": "Returns entities.",
        "operationId": "get-typevads",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeVads"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_vads": "string",
                      "type_vads_merchant_id": "string",
                      "fk_contract": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["TypeVads"],
        "summary": "/TypeVads - POST",
        "description": "Create entity.",
        "operationId": "post-typevads",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeVads"
              },
              "example": {
                "pk_type_vads": "string",
                "type_vads_merchant_id": "string",
                "fk_contract": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TypeVads"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_type_vads": "string",
                      "type_vads_merchant_id": "string",
                      "fk_contract": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/Installment/pk_installment/{pk_installment}": {
      "get": {
        "tags": ["Installment"],
        "summary": "/Installment/pk_installment/{pk_installment} - GET",
        "description": "Returns an entity.",
        "operationId": "get-installment-pk_installment-pk_installment",
        "parameters": [
          {
            "name": "pk_installment",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Installment"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_installment": "string",
                      "installment_status": "string",
                      "installment_occurences": 0,
                      "installment_vat": 0,
                      "installment_currency": "string",
                      "installment_total_amount_without_vat": "string",
                      "installment_paid_amount_without_vat": "string",
                      "installment_created_at": "string",
                      "fk_account": "string",
                      "fk_terminal": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["Installment"],
        "summary": "/Installment/pk_installment/{pk_installment} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-installment-pk_installment-pk_installment",
        "parameters": [
          {
            "name": "pk_installment",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Installment_NoPK"
              },
              "example": {
                "installment_status": "string",
                "installment_occurences": 0,
                "installment_vat": 0,
                "installment_currency": "string",
                "installment_total_amount_without_vat": "string",
                "installment_paid_amount_without_vat": "string",
                "installment_created_at": "string",
                "fk_account": "string",
                "fk_terminal": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Installment"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_installment": "string",
                      "installment_status": "string",
                      "installment_occurences": 0,
                      "installment_vat": 0,
                      "installment_currency": "string",
                      "installment_total_amount_without_vat": "string",
                      "installment_paid_amount_without_vat": "string",
                      "installment_created_at": "string",
                      "fk_account": "string",
                      "fk_terminal": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Installment"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_installment": "string",
                      "installment_status": "string",
                      "installment_occurences": 0,
                      "installment_vat": 0,
                      "installment_currency": "string",
                      "installment_total_amount_without_vat": "string",
                      "installment_paid_amount_without_vat": "string",
                      "installment_created_at": "string",
                      "fk_account": "string",
                      "fk_terminal": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["Installment"],
        "summary": "/Installment/pk_installment/{pk_installment} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-installment-pk_installment-pk_installment",
        "parameters": [
          {
            "name": "pk_installment",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Installment_NoPK"
              },
              "example": {
                "installment_status": "string",
                "installment_occurences": 0,
                "installment_vat": 0,
                "installment_currency": "string",
                "installment_total_amount_without_vat": "string",
                "installment_paid_amount_without_vat": "string",
                "installment_created_at": "string",
                "fk_account": "string",
                "fk_terminal": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Installment"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_installment": "string",
                      "installment_status": "string",
                      "installment_occurences": 0,
                      "installment_vat": 0,
                      "installment_currency": "string",
                      "installment_total_amount_without_vat": "string",
                      "installment_paid_amount_without_vat": "string",
                      "installment_created_at": "string",
                      "fk_account": "string",
                      "fk_terminal": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Installment"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_installment": "string",
                      "installment_status": "string",
                      "installment_occurences": 0,
                      "installment_vat": 0,
                      "installment_currency": "string",
                      "installment_total_amount_without_vat": "string",
                      "installment_paid_amount_without_vat": "string",
                      "installment_created_at": "string",
                      "fk_account": "string",
                      "fk_terminal": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["Installment"],
        "summary": "/Installment/pk_installment/{pk_installment} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-installment-pk_installment-pk_installment",
        "parameters": [
          {
            "name": "pk_installment",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/Installment": {
      "get": {
        "tags": ["Installment"],
        "summary": "/Installment - GET",
        "description": "Returns entities.",
        "operationId": "get-installment",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Installment"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_installment": "string",
                      "installment_status": "string",
                      "installment_occurences": 0,
                      "installment_vat": 0,
                      "installment_currency": "string",
                      "installment_total_amount_without_vat": "string",
                      "installment_paid_amount_without_vat": "string",
                      "installment_created_at": "string",
                      "fk_account": "string",
                      "fk_terminal": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["Installment"],
        "summary": "/Installment - POST",
        "description": "Create entity.",
        "operationId": "post-installment",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Installment"
              },
              "example": {
                "pk_installment": "string",
                "installment_status": "string",
                "installment_occurences": 0,
                "installment_vat": 0,
                "installment_currency": "string",
                "installment_total_amount_without_vat": "string",
                "installment_paid_amount_without_vat": "string",
                "installment_created_at": "string",
                "fk_account": "string",
                "fk_terminal": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Installment"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_installment": "string",
                      "installment_status": "string",
                      "installment_occurences": 0,
                      "installment_vat": 0,
                      "installment_currency": "string",
                      "installment_total_amount_without_vat": "string",
                      "installment_paid_amount_without_vat": "string",
                      "installment_created_at": "string",
                      "fk_account": "string",
                      "fk_terminal": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/Transaction/pk_transaction/{pk_transaction}": {
      "get": {
        "tags": ["Transaction"],
        "summary": "/Transaction/pk_transaction/{pk_transaction} - GET",
        "description": "Returns an entity.",
        "operationId": "get-transaction-pk_transaction-pk_transaction",
        "parameters": [
          {
            "name": "pk_transaction",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_transaction": "string",
                      "transaction_id": "string",
                      "transaction_status": "string",
                      "transaction_payment_method": "string",
                      "transaction_amount_without_vat": 0,
                      "transaction_currency": "string",
                      "transaction_vat": 0,
                      "transaction_label": "string",
                      "transaction_initiated": "string",
                      "transaction_finished": "string",
                      "fk_account": "string",
                      "fk_contract": "string",
                      "fk_installment": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "put": {
        "tags": ["Transaction"],
        "summary": "/Transaction/pk_transaction/{pk_transaction} - PUT",
        "description": "Replace or create entity.",
        "operationId": "put-transaction-pk_transaction-pk_transaction",
        "parameters": [
          {
            "name": "pk_transaction",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction_NoPK"
              },
              "example": {
                "transaction_id": "string",
                "transaction_status": "string",
                "transaction_payment_method": "string",
                "transaction_amount_without_vat": 0,
                "transaction_currency": "string",
                "transaction_vat": 0,
                "transaction_label": "string",
                "transaction_initiated": "string",
                "transaction_finished": "string",
                "fk_account": "string",
                "fk_contract": "string",
                "fk_installment": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_transaction": "string",
                      "transaction_id": "string",
                      "transaction_status": "string",
                      "transaction_payment_method": "string",
                      "transaction_amount_without_vat": 0,
                      "transaction_currency": "string",
                      "transaction_vat": 0,
                      "transaction_label": "string",
                      "transaction_initiated": "string",
                      "transaction_finished": "string",
                      "fk_account": "string",
                      "fk_contract": "string",
                      "fk_installment": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_transaction": "string",
                      "transaction_id": "string",
                      "transaction_status": "string",
                      "transaction_payment_method": "string",
                      "transaction_amount_without_vat": 0,
                      "transaction_currency": "string",
                      "transaction_vat": 0,
                      "transaction_label": "string",
                      "transaction_initiated": "string",
                      "transaction_finished": "string",
                      "fk_account": "string",
                      "fk_contract": "string",
                      "fk_installment": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "patch": {
        "tags": ["Transaction"],
        "summary": "/Transaction/pk_transaction/{pk_transaction} - PATCH",
        "description": "Update or create entity.",
        "operationId": "patch-transaction-pk_transaction-pk_transaction",
        "parameters": [
          {
            "name": "pk_transaction",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction_NoPK"
              },
              "example": {
                "transaction_id": "string",
                "transaction_status": "string",
                "transaction_payment_method": "string",
                "transaction_amount_without_vat": 0,
                "transaction_currency": "string",
                "transaction_vat": 0,
                "transaction_label": "string",
                "transaction_initiated": "string",
                "transaction_finished": "string",
                "fk_account": "string",
                "fk_contract": "string",
                "fk_installment": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_transaction": "string",
                      "transaction_id": "string",
                      "transaction_status": "string",
                      "transaction_payment_method": "string",
                      "transaction_amount_without_vat": 0,
                      "transaction_currency": "string",
                      "transaction_vat": 0,
                      "transaction_label": "string",
                      "transaction_initiated": "string",
                      "transaction_finished": "string",
                      "fk_account": "string",
                      "fk_contract": "string",
                      "fk_installment": "string"
                    }
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_transaction": "string",
                      "transaction_id": "string",
                      "transaction_status": "string",
                      "transaction_payment_method": "string",
                      "transaction_amount_without_vat": 0,
                      "transaction_currency": "string",
                      "transaction_vat": 0,
                      "transaction_label": "string",
                      "transaction_initiated": "string",
                      "transaction_finished": "string",
                      "fk_account": "string",
                      "fk_contract": "string",
                      "fk_installment": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": ["Transaction"],
        "summary": "/Transaction/pk_transaction/{pk_transaction} - DELETE",
        "description": "Delete entity.",
        "operationId": "delete-transaction-pk_transaction-pk_transaction",
        "parameters": [
          {
            "name": "pk_transaction",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/Transaction": {
      "get": {
        "tags": ["Transaction"],
        "summary": "/Transaction - GET",
        "description": "Returns entities.",
        "operationId": "get-transaction",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "A comma separated list of fields to return in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData expression (an expression that returns a boolean value) using the entity's fields to retrieve a subset of the results.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Uses a comma-separated list of expressions to sort response items. Add 'desc' for descending order, otherwise it's ascending by default.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$first",
            "in": "query",
            "description": "An integer value that specifies the number of items to return. Default is 100.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$after",
            "in": "query",
            "description": "An opaque string that specifies the cursor position after which results should be returned.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    },
                    "nextLink": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_transaction": "string",
                      "transaction_id": "string",
                      "transaction_status": "string",
                      "transaction_payment_method": "string",
                      "transaction_amount_without_vat": 0,
                      "transaction_currency": "string",
                      "transaction_vat": 0,
                      "transaction_label": "string",
                      "transaction_initiated": "string",
                      "transaction_finished": "string",
                      "fk_account": "string",
                      "fk_contract": "string",
                      "fk_installment": "string"
                    }
                  ],
                  "nextLink": "string"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": ["Transaction"],
        "summary": "/Transaction - POST",
        "description": "Create entity.",
        "operationId": "post-transaction",
        "parameters": [
          {
            "name": "X-MS-API-ROLE",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              },
              "example": {
                "pk_transaction": "string",
                "transaction_id": "string",
                "transaction_status": "string",
                "transaction_payment_method": "string",
                "transaction_amount_without_vat": 0,
                "transaction_currency": "string",
                "transaction_vat": 0,
                "transaction_label": "string",
                "transaction_initiated": "string",
                "transaction_finished": "string",
                "fk_account": "string",
                "fk_contract": "string",
                "fk_installment": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    }
                  }
                },
                "example": {
                  "value": [
                    {
                      "pk_transaction": "string",
                      "transaction_id": "string",
                      "transaction_status": "string",
                      "transaction_payment_method": "string",
                      "transaction_amount_without_vat": 0,
                      "transaction_currency": "string",
                      "transaction_vat": 0,
                      "transaction_label": "string",
                      "transaction_initiated": "string",
                      "transaction_finished": "string",
                      "fk_account": "string",
                      "fk_contract": "string",
                      "fk_installment": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "NotFound"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Partner": {
        "type": "object",
        "properties": {
          "pk_partner": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Partner_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_partner": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Partner_NoPK": {
        "type": "object"
      },
      "User": {
        "type": "object",
        "properties": {
          "pk_user": {
            "type": "string",
            "format": ""
          },
          "user_oid": {
            "type": "string",
            "format": ""
          },
          "user_first_name": {
            "type": "string",
            "format": ""
          },
          "user_last_name": {
            "type": "string",
            "format": ""
          },
          "user_phone": {
            "type": "string",
            "format": ""
          },
          "user_email": {
            "type": "string",
            "format": ""
          },
          "user_role": {
            "type": "string",
            "format": ""
          }
        }
      },
      "User_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_user": {
            "type": "string",
            "format": ""
          },
          "user_oid": {
            "type": "string",
            "format": ""
          },
          "user_first_name": {
            "type": "string",
            "format": ""
          },
          "user_last_name": {
            "type": "string",
            "format": ""
          },
          "user_phone": {
            "type": "string",
            "format": ""
          },
          "user_email": {
            "type": "string",
            "format": ""
          },
          "user_role": {
            "type": "string",
            "format": ""
          }
        }
      },
      "User_NoPK": {
        "type": "object",
        "properties": {
          "user_oid": {
            "type": "string",
            "format": ""
          },
          "user_first_name": {
            "type": "string",
            "format": ""
          },
          "user_last_name": {
            "type": "string",
            "format": ""
          },
          "user_phone": {
            "type": "string",
            "format": ""
          },
          "user_email": {
            "type": "string",
            "format": ""
          },
          "user_role": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "pk_account": {
            "type": "string",
            "format": ""
          },
          "account_global_id": {
            "type": "string",
            "format": ""
          },
          "account_national_id": {
            "type": "string",
            "format": ""
          },
          "account_name": {
            "type": "string",
            "format": ""
          },
          "account_type": {
            "type": "string",
            "format": ""
          },
          "account_is_active": {
            "type": "boolean",
            "format": ""
          },
          "account_deletion_date": {
            "type": "string",
            "format": ""
          },
          "account_created_at": {
            "type": "string",
            "format": ""
          },
          "account_currency": {
            "type": "string",
            "format": ""
          },
          "account_notification_email": {
            "type": "string",
            "format": ""
          },
          "account_iban_billing": {
            "type": "string",
            "format": ""
          },
          "fk_partner": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Account_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_account": {
            "type": "string",
            "format": ""
          },
          "account_global_id": {
            "type": "string",
            "format": ""
          },
          "account_national_id": {
            "type": "string",
            "format": ""
          },
          "account_name": {
            "type": "string",
            "format": ""
          },
          "account_type": {
            "type": "string",
            "format": ""
          },
          "account_is_active": {
            "type": "boolean",
            "format": ""
          },
          "account_deletion_date": {
            "type": "string",
            "format": ""
          },
          "account_created_at": {
            "type": "string",
            "format": ""
          },
          "account_currency": {
            "type": "string",
            "format": ""
          },
          "account_notification_email": {
            "type": "string",
            "format": ""
          },
          "account_iban_billing": {
            "type": "string",
            "format": ""
          },
          "fk_partner": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Account_NoPK": {
        "type": "object",
        "properties": {
          "account_global_id": {
            "type": "string",
            "format": ""
          },
          "account_national_id": {
            "type": "string",
            "format": ""
          },
          "account_name": {
            "type": "string",
            "format": ""
          },
          "account_type": {
            "type": "string",
            "format": ""
          },
          "account_is_active": {
            "type": "boolean",
            "format": ""
          },
          "account_deletion_date": {
            "type": "string",
            "format": ""
          },
          "account_created_at": {
            "type": "string",
            "format": ""
          },
          "account_currency": {
            "type": "string",
            "format": ""
          },
          "account_notification_email": {
            "type": "string",
            "format": ""
          },
          "account_iban_billing": {
            "type": "string",
            "format": ""
          },
          "fk_partner": {
            "type": "string",
            "format": ""
          }
        }
      },
      "UserHasAccount": {
        "type": "object",
        "properties": {
          "pk_user": {
            "type": "string",
            "format": ""
          },
          "pk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "UserHasAccount_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_user": {
            "type": "string",
            "format": ""
          },
          "pk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "UserHasAccount_NoPK": {
        "type": "object"
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "pk_invoice": {
            "type": "string",
            "format": ""
          },
          "invoice_number": {
            "type": "string",
            "format": ""
          },
          "invoice_month": {
            "type": "string",
            "format": ""
          },
          "invoice_created_at": {
            "type": "string",
            "format": ""
          },
          "invoice_status": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Invoice_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_invoice": {
            "type": "string",
            "format": ""
          },
          "invoice_number": {
            "type": "string",
            "format": ""
          },
          "invoice_month": {
            "type": "string",
            "format": ""
          },
          "invoice_created_at": {
            "type": "string",
            "format": ""
          },
          "invoice_status": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Invoice_NoPK": {
        "type": "object",
        "properties": {
          "invoice_number": {
            "type": "string",
            "format": ""
          },
          "invoice_month": {
            "type": "string",
            "format": ""
          },
          "invoice_created_at": {
            "type": "string",
            "format": ""
          },
          "invoice_status": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "BillingAddress": {
        "type": "object",
        "properties": {
          "pk_billing_address": {
            "type": "string",
            "format": ""
          },
          "billing_address": {
            "type": "string",
            "format": ""
          },
          "billing_address_complement_localisation": {
            "type": "string",
            "format": ""
          },
          "billing_address_numero_voie": {
            "type": "string",
            "format": ""
          },
          "billing_address_indice_repetition": {
            "type": "string",
            "format": ""
          },
          "billing_address_type_voie": {
            "type": "string",
            "format": ""
          },
          "billing_address_libelle_voie": {
            "type": "string",
            "format": ""
          },
          "billing_address_distribution_speciale": {
            "type": "string",
            "format": ""
          },
          "billing_address_code_postal": {
            "type": "string",
            "format": ""
          },
          "billing_address_libelle_commune": {
            "type": "string",
            "format": ""
          },
          "billing_address_code_pays": {
            "type": "string",
            "format": ""
          },
          "billing_address_pays": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "BillingAddress_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_billing_address": {
            "type": "string",
            "format": ""
          },
          "billing_address": {
            "type": "string",
            "format": ""
          },
          "billing_address_complement_localisation": {
            "type": "string",
            "format": ""
          },
          "billing_address_numero_voie": {
            "type": "string",
            "format": ""
          },
          "billing_address_indice_repetition": {
            "type": "string",
            "format": ""
          },
          "billing_address_type_voie": {
            "type": "string",
            "format": ""
          },
          "billing_address_libelle_voie": {
            "type": "string",
            "format": ""
          },
          "billing_address_distribution_speciale": {
            "type": "string",
            "format": ""
          },
          "billing_address_code_postal": {
            "type": "string",
            "format": ""
          },
          "billing_address_libelle_commune": {
            "type": "string",
            "format": ""
          },
          "billing_address_code_pays": {
            "type": "string",
            "format": ""
          },
          "billing_address_pays": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "BillingAddress_NoPK": {
        "type": "object",
        "properties": {
          "billing_address": {
            "type": "string",
            "format": ""
          },
          "billing_address_complement_localisation": {
            "type": "string",
            "format": ""
          },
          "billing_address_numero_voie": {
            "type": "string",
            "format": ""
          },
          "billing_address_indice_repetition": {
            "type": "string",
            "format": ""
          },
          "billing_address_type_voie": {
            "type": "string",
            "format": ""
          },
          "billing_address_libelle_voie": {
            "type": "string",
            "format": ""
          },
          "billing_address_distribution_speciale": {
            "type": "string",
            "format": ""
          },
          "billing_address_code_postal": {
            "type": "string",
            "format": ""
          },
          "billing_address_libelle_commune": {
            "type": "string",
            "format": ""
          },
          "billing_address_code_pays": {
            "type": "string",
            "format": ""
          },
          "billing_address_pays": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Terminal": {
        "type": "object",
        "properties": {
          "pk_terminal": {
            "type": "string",
            "format": ""
          },
          "terminal_label": {
            "type": "string",
            "format": ""
          },
          "terminal_favorite_contract_type": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Terminal_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_terminal": {
            "type": "string",
            "format": ""
          },
          "terminal_label": {
            "type": "string",
            "format": ""
          },
          "terminal_favorite_contract_type": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Terminal_NoPK": {
        "type": "object",
        "properties": {
          "terminal_label": {
            "type": "string",
            "format": ""
          },
          "terminal_favorite_contract_type": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Mandate": {
        "type": "object",
        "properties": {
          "pk_mandate": {
            "type": "string",
            "format": ""
          },
          "mandate_reference": {
            "type": "string",
            "format": ""
          },
          "mandate_signature_date": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Mandate_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_mandate": {
            "type": "string",
            "format": ""
          },
          "mandate_reference": {
            "type": "string",
            "format": ""
          },
          "mandate_signature_date": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Mandate_NoPK": {
        "type": "object",
        "properties": {
          "mandate_reference": {
            "type": "string",
            "format": ""
          },
          "mandate_signature_date": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Contract": {
        "type": "object",
        "properties": {
          "pk_contract": {
            "type": "string",
            "format": ""
          },
          "contract_type": {
            "type": "string",
            "format": ""
          },
          "contract_number": {
            "type": "string",
            "format": ""
          },
          "contract_subscription_id": {
            "type": "string",
            "format": ""
          },
          "contract_beneficiary_name": {
            "type": "string",
            "format": ""
          },
          "fk_terminal": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Contract_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_contract": {
            "type": "string",
            "format": ""
          },
          "contract_type": {
            "type": "string",
            "format": ""
          },
          "contract_number": {
            "type": "string",
            "format": ""
          },
          "contract_subscription_id": {
            "type": "string",
            "format": ""
          },
          "contract_beneficiary_name": {
            "type": "string",
            "format": ""
          },
          "fk_terminal": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Contract_NoPK": {
        "type": "object",
        "properties": {
          "contract_type": {
            "type": "string",
            "format": ""
          },
          "contract_number": {
            "type": "string",
            "format": ""
          },
          "contract_subscription_id": {
            "type": "string",
            "format": ""
          },
          "contract_beneficiary_name": {
            "type": "string",
            "format": ""
          },
          "fk_terminal": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          }
        }
      },
      "TypeRibpay": {
        "type": "object",
        "properties": {
          "pk_type_ribpay": {
            "type": "string",
            "format": ""
          },
          "type_ribpay_authorized_account_id": {
            "type": "string",
            "format": ""
          },
          "type_ribpay_alias_id": {
            "type": "string",
            "format": ""
          },
          "fk_contract": {
            "type": "string",
            "format": ""
          }
        }
      },
      "TypeRibpay_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_type_ribpay": {
            "type": "string",
            "format": ""
          },
          "type_ribpay_authorized_account_id": {
            "type": "string",
            "format": ""
          },
          "type_ribpay_alias_id": {
            "type": "string",
            "format": ""
          },
          "fk_contract": {
            "type": "string",
            "format": ""
          }
        }
      },
      "TypeRibpay_NoPK": {
        "type": "object",
        "properties": {
          "type_ribpay_authorized_account_id": {
            "type": "string",
            "format": ""
          },
          "type_ribpay_alias_id": {
            "type": "string",
            "format": ""
          },
          "fk_contract": {
            "type": "string",
            "format": ""
          }
        }
      },
      "TypeVads": {
        "type": "object",
        "properties": {
          "pk_type_vads": {
            "type": "string",
            "format": ""
          },
          "type_vads_merchant_id": {
            "type": "string",
            "format": ""
          },
          "fk_contract": {
            "type": "string",
            "format": ""
          }
        }
      },
      "TypeVads_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_type_vads": {
            "type": "string",
            "format": ""
          },
          "type_vads_merchant_id": {
            "type": "string",
            "format": ""
          },
          "fk_contract": {
            "type": "string",
            "format": ""
          }
        }
      },
      "TypeVads_NoPK": {
        "type": "object",
        "properties": {
          "type_vads_merchant_id": {
            "type": "string",
            "format": ""
          },
          "fk_contract": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Installment": {
        "type": "object",
        "properties": {
          "pk_installment": {
            "type": "string",
            "format": ""
          },
          "installment_status": {
            "type": "string",
            "format": ""
          },
          "installment_occurences": {
            "type": "number",
            "format": ""
          },
          "installment_vat": {
            "type": "number",
            "format": ""
          },
          "installment_currency": {
            "type": "string",
            "format": ""
          },
          "installment_total_amount_without_vat": {
            "type": "string",
            "format": ""
          },
          "installment_paid_amount_without_vat": {
            "type": "string",
            "format": ""
          },
          "installment_created_at": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          },
          "fk_terminal": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Installment_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_installment": {
            "type": "string",
            "format": ""
          },
          "installment_status": {
            "type": "string",
            "format": ""
          },
          "installment_occurences": {
            "type": "number",
            "format": ""
          },
          "installment_vat": {
            "type": "number",
            "format": ""
          },
          "installment_currency": {
            "type": "string",
            "format": ""
          },
          "installment_total_amount_without_vat": {
            "type": "string",
            "format": ""
          },
          "installment_paid_amount_without_vat": {
            "type": "string",
            "format": ""
          },
          "installment_created_at": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          },
          "fk_terminal": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Installment_NoPK": {
        "type": "object",
        "properties": {
          "installment_status": {
            "type": "string",
            "format": ""
          },
          "installment_occurences": {
            "type": "number",
            "format": ""
          },
          "installment_vat": {
            "type": "number",
            "format": ""
          },
          "installment_currency": {
            "type": "string",
            "format": ""
          },
          "installment_total_amount_without_vat": {
            "type": "string",
            "format": ""
          },
          "installment_paid_amount_without_vat": {
            "type": "string",
            "format": ""
          },
          "installment_created_at": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          },
          "fk_terminal": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "pk_transaction": {
            "type": "string",
            "format": ""
          },
          "transaction_id": {
            "type": "string",
            "format": ""
          },
          "transaction_status": {
            "type": "string",
            "format": ""
          },
          "transaction_payment_method": {
            "type": "string",
            "format": ""
          },
          "transaction_amount_without_vat": {
            "type": "number",
            "format": ""
          },
          "transaction_currency": {
            "type": "string",
            "format": ""
          },
          "transaction_vat": {
            "type": "number",
            "format": ""
          },
          "transaction_label": {
            "type": "string",
            "format": ""
          },
          "transaction_initiated": {
            "type": "string",
            "format": ""
          },
          "transaction_finished": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          },
          "fk_contract": {
            "type": "string",
            "format": ""
          },
          "fk_installment": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Transaction_NoAutoPK": {
        "type": "object",
        "properties": {
          "pk_transaction": {
            "type": "string",
            "format": ""
          },
          "transaction_id": {
            "type": "string",
            "format": ""
          },
          "transaction_status": {
            "type": "string",
            "format": ""
          },
          "transaction_payment_method": {
            "type": "string",
            "format": ""
          },
          "transaction_amount_without_vat": {
            "type": "number",
            "format": ""
          },
          "transaction_currency": {
            "type": "string",
            "format": ""
          },
          "transaction_vat": {
            "type": "number",
            "format": ""
          },
          "transaction_label": {
            "type": "string",
            "format": ""
          },
          "transaction_initiated": {
            "type": "string",
            "format": ""
          },
          "transaction_finished": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          },
          "fk_contract": {
            "type": "string",
            "format": ""
          },
          "fk_installment": {
            "type": "string",
            "format": ""
          }
        }
      },
      "Transaction_NoPK": {
        "type": "object",
        "properties": {
          "transaction_id": {
            "type": "string",
            "format": ""
          },
          "transaction_status": {
            "type": "string",
            "format": ""
          },
          "transaction_payment_method": {
            "type": "string",
            "format": ""
          },
          "transaction_amount_without_vat": {
            "type": "number",
            "format": ""
          },
          "transaction_currency": {
            "type": "string",
            "format": ""
          },
          "transaction_vat": {
            "type": "number",
            "format": ""
          },
          "transaction_label": {
            "type": "string",
            "format": ""
          },
          "transaction_initiated": {
            "type": "string",
            "format": ""
          },
          "transaction_finished": {
            "type": "string",
            "format": ""
          },
          "fk_account": {
            "type": "string",
            "format": ""
          },
          "fk_contract": {
            "type": "string",
            "format": ""
          },
          "fk_installment": {
            "type": "string",
            "format": ""
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "name": "Ocp-Apim-Subscription-Key",
        "in": "header"
      },
      "apiKeyQuery": {
        "type": "apiKey",
        "name": "subscription-key",
        "in": "query"
      }
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ]
}
